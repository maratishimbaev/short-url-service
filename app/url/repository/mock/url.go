// Code generated by MockGen. DO NOT EDIT.
// Source: ../interfaces/repository.go

// Package mock is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
	models "short-url-service/app/models"
)

// MockUrlRepository is a mock of UrlRepository interface
type MockUrlRepository struct {
	ctrl     *gomock.Controller
	recorder *MockUrlRepositoryMockRecorder
}

// MockUrlRepositoryMockRecorder is the mock recorder for MockUrlRepository
type MockUrlRepositoryMockRecorder struct {
	mock *MockUrlRepository
}

// NewMockUrlRepository creates a new mock instance
func NewMockUrlRepository(ctrl *gomock.Controller) *MockUrlRepository {
	mock := &MockUrlRepository{ctrl: ctrl}
	mock.recorder = &MockUrlRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockUrlRepository) EXPECT() *MockUrlRepositoryMockRecorder {
	return m.recorder
}

// CreateUrl mocks base method
func (m *MockUrlRepository) CreateUrl(url *models.Url) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateUrl", url)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateUrl indicates an expected call of CreateUrl
func (mr *MockUrlRepositoryMockRecorder) CreateUrl(url interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateUrl", reflect.TypeOf((*MockUrlRepository)(nil).CreateUrl), url)
}

// GetUrl mocks base method
func (m *MockUrlRepository) GetUrl(newUrl string) (*models.Url, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUrl", newUrl)
	ret0, _ := ret[0].(*models.Url)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUrl indicates an expected call of GetUrl
func (mr *MockUrlRepositoryMockRecorder) GetUrl(newUrl interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUrl", reflect.TypeOf((*MockUrlRepository)(nil).GetUrl), newUrl)
}
