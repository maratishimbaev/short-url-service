// Code generated by MockGen. DO NOT EDIT.
// Source: ../interfaces/usecase.go

// Package mock is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
	models "short-url-service/app/models"
)

// MockUrlUseCase is a mock of UrlUseCase interface
type MockUrlUseCase struct {
	ctrl     *gomock.Controller
	recorder *MockUrlUseCaseMockRecorder
}

// MockUrlUseCaseMockRecorder is the mock recorder for MockUrlUseCase
type MockUrlUseCaseMockRecorder struct {
	mock *MockUrlUseCase
}

// NewMockUrlUseCase creates a new mock instance
func NewMockUrlUseCase(ctrl *gomock.Controller) *MockUrlUseCase {
	mock := &MockUrlUseCase{ctrl: ctrl}
	mock.recorder = &MockUrlUseCaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockUrlUseCase) EXPECT() *MockUrlUseCaseMockRecorder {
	return m.recorder
}

// AddUrl mocks base method
func (m *MockUrlUseCase) AddUrl(url *models.Url) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddUrl", url)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddUrl indicates an expected call of AddUrl
func (mr *MockUrlUseCaseMockRecorder) AddUrl(url interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddUrl", reflect.TypeOf((*MockUrlUseCase)(nil).AddUrl), url)
}

// GetUrl mocks base method
func (m *MockUrlUseCase) GetUrl(newUrl string) (*models.Url, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUrl", newUrl)
	ret0, _ := ret[0].(*models.Url)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUrl indicates an expected call of GetUrl
func (mr *MockUrlUseCaseMockRecorder) GetUrl(newUrl interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUrl", reflect.TypeOf((*MockUrlUseCase)(nil).GetUrl), newUrl)
}
